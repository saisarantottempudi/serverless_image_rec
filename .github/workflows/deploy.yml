name: Deploy Serverless Image Recognition API

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: 'beta'

      # --- AUTHENTICATION ---

      # âœ… Preferred: Workload Identity Federation (secure)
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      # Optional alternative:
      # - name: Authenticate using Service Account Key
      #   uses: google-github-actions/auth@v2
      #   with:
      #     credentials_json: ${{ secrets.GCP_SA_KEY }}

      # --- DEPENDENCY INSTALLATION ---
      - name: Install dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r cloudfunction/requirements.txt
          pip install -r .dev-requirements.txt

      # --- LOCAL TEST (OpenAI caption sanity check) ---
      - name: Run caption verification
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          source venv/bin/activate
          python scripts/test_caption_ci.py

      # --- DEPLOY FUNCTION ---
      - name: Deploy Cloud Function (Gen 2)
        run: |
          gcloud functions deploy image-reco-fn \
            --gen2 \
            --region=${{ secrets.GCP_REGION }} \
            --runtime=python311 \
            --entry-point=gcs_trigger \
            --source=cloudfunction \
            --memory=1024MB \
            --timeout=60s \
            --trigger-event-filters="type=google.cloud.storage.object.v1.finalized" \
            --trigger-event-filters="bucket=${{ secrets.GCS_BUCKET }}" \
            --set-env-vars="PROJECT_ID=${{ secrets.GCP_PROJECT }},VERTEX_REGION=${{ secrets.VERTEX_REGION }},USE_VERTEX=${{ secrets.USE_VERTEX }},OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }},OPENAI_MODEL=${{ secrets.OPENAI_MODEL }}"